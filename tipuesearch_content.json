{"pages":[{"url":"search.html","text":"\n\n\nMordor-lab\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          Las escrituras del Nigromancer\n        \n\n\nBuscar\n\n\n\n\n\n\n \n\n\n\n\n\n\nArchivos\nRSS\ntwitter\n\n\n2008-2014 © Las escrituras del Nigromancer | Powered by Pelican| CC BY\n\n\n\n\n\n\n\n\n\n$(document).ready(function() {\n     $('#tipue_search_input').tipuesearch({\n          'show': 10,\n          'mode': 'json',\n          'contentLocation': 'tipuesearch_content.json'\n     });\n});\n\n\n","tags":"","title":"Mordor-lab"},{"url":"blog/primeros-pasos-en-git","text":"Git es un software de control de versiones diseñado por Linus Torvalds, pensando en la eficiencia y la confiabilidad del mantenimiento de versiones de aplicaciones cuando estas tienen un gran número de archivos de código fuente. Instalación en Debian Para la instalación solo es necesario el siguiente comando, dado que git se encuentra en repositorios. # apt-get install git luego realizar configuraciones globales para el usuario: $ git config --global user.name \"John Doe\" $ git config --global user.email johndoe@example.com Agregar tu herrmaineta pare resolver conflictos: Git acepta kdiff3, tkdiff, meld, xxdiff, emerge, vimdiff, gvimdiff, ecmerge, y opendiff en mi caso: $ git config --global merge.tool kdiff3 Si quieres revizar tus configuraciones: git config --list Crear tu repositorio local Creamos un directorio donde se alojara nuestro repositorio ejemplo \"mirepogit\" : $ mkdir mirepogit y nos movemos a ella: $ cd mirepogit alli inicializamos el repositorio: $ git init Bien con esto se crean los archivos de configuraciones internos del repositorio local. Podemos empezar a trabajar en el ejemplo creando unos archivos: $ touch holamundo Agregamos este archivo al repositorio: $ git add holamundo podemos agregar recursivamente los archivos de un directorio, si es que se lo indicamos ejemplo: $ git add path_directorio Una forma de agregar todos los archivos del directorio en el que estamos parados es: $ git add . Ahora debemos commitiar el los cambios: $ git commit -m \"este es el mensaje que se le añade al commit\" Con esto ya estamos trabajando localmente Enlazar mi repositori local con uno externo (ejemplo GitHub) Bien primero que nada tenemos que crearnos una cuenta en github (también puede ser en GitLab, Bitbucket o algún otro privado) . Cuando ya tenemos la cuenta creamos el repositorio vamos a obtener varios metodos para clonar este repositorio con nuestro repositorio local. Optamos por hacerlo a través de SSH. ejemplo: `git@github.com:usuario/mirepogit nota: primeramente debemos crear una clave SSH en nuestra computadora y añadir esta clave también a la configuración en github. En nuestra consola hacemos: $ ssh-keygen De este modo creamos una clave ssh, preferentemente es recomendable ponerle contraseña al momento de crearla. En la configuraciones de cuenta de GitHub agregamos nuestra clave, ejemplo: $ cat ~/.ssh/id_rsa.pub y nos devuelve algo similar a esto: ssh-rsa AAAAB3NzaC1yc2EAAAA345345ABAAABAQCyW40wyyXVboiQCEbBNjhi3iBXAUMEuUHVOGMVA9Sk3ioeeuWG5FoiSne uifFvKfXRild1fMXj0vCtRDJVSVS9/Cz1EQECf5ju9eHGqF+pMviifpJxfjirFo3rIy4dx7vB8FREsdfazdldQ5Crb9ijbbeaQ 95VrnEcSfJjJwGZWlz4lO+m5En3E509l5Nxax2+HVYjHyIIs7nTLl+bVMFjIRgN9nEyrmDVIVtuCm7ZKWvywwldIqDfTq3LR01 /gl5I9HRyMRAPiiTPZ55AWcNomtMJxFylknT9d8SvlfYmIB81V2XTZ/asdasda43JvVn3jOZoA7ABG90Qx6b00yYD usuario@host Bien ahora debemos crear un nuevo repositorio en github, por ejemplo con el mismo nombre \"mirepogit\", una vez creado podemos obtener en la parte inferior derecha nuestro acceso por SSH; ejemplo \"git@github.com:usuario/mirepogit\",con este dato procedemos a enlazarlo con nuestro repositorio local. Para ello nos paramos en la raíz de nuestro proyecto. En este ejemplo es el directorio \"mirepogit\" que creamos anteriormente y hacemos: $ git remote add origin git@github.com:usuario/mirepogit Si todo ha salido bien con las claves publicas aquí solo nos pide la clave de nuestra llave SSH ahora podemos traer las cosas desde nuestro repositorio en gitHub: $ git pull origin master Con esto git empieza a trabajar y nos copia las cosas que tengamos en nuestro repositorio en gitHub. Ahora vamos a hacer lo inverso agregando las cosas desde el repositorio local al repositorio en gitHub $ git push origin master Con esto ahora podemos ver en nuestro explorador de repositorio en gitHub que nuestros archivos que fueron adheridos y commitiados localmente ahora están en gitHub.","tags":"About","title":"Primeros pasos en Git"},{"url":"blog/dmenu","text":"Hay mucha gente que prefiere tener lanzadores a un click de distancia, pero para muchos (como yo) alejarse del teclado al mouse implica un esfuerzo extra. Así que a la hora de lanzar una aplicación lo que prefiero es usar dmenu . dmenu es rapido, dinamico y ligero para entornos X, originalmente diseñado para dwm (un manejador de ventanas que espero pronto escribir sobre el, es especial porque he probado dwmX y me entusiasma mucho). Instalación En la familia de debian dmenu esta incluido en los paquetes suckless-tools # apt-get install suckless-tools Configuración Una vez instalado es recomendable configurar teclas de acceso rápido a dmenu. Esto puede hacerlo vía las configuraciones de su entorno gráfico (Gnome, KDE, XFCE, Openbox, etc). En mi caso como uso Openbox la configuración la hago en el archivo ~.config/openbox/rc.xml Mas precisamente de esta manera: <keybind key= \"A-F3\" > <action name= \"Execute\" > <startupnotify> <enabled> false </enabled> <name> dmenu-bind </name> </startupnotify> <command> ~/.config/dmenu/dmenu-bind.sh </command> </action> </keybind> Como ven, el comando que ejecuta apunta a ~/.config/dmenu/dmenu-bind.sh , este es un script donde he configurado las opciones de como se lanzara mi dmenu. Entre algunas de las opciones que pueden configurar son: Color de letra, color de fondo, tipo de letra, color de selección, posición, etc. Ahora les muestro mi configuración: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #!/bin/bash # # written for nigromancer @nigrobyte based on Bunsenlabs # # -nb normal background colour # -nf normal foreground colour # -sb selected background colour # -sf selected foreground colour # # -b place menu at bottom (otherwise top) # # See 'man dmenu' for more information. USAGE = \"\\n To start dmenu at the top or bottom of the screen,\\n\\ add or remove -b in the dmenu_run command in dmenu-bind.sh.\\n\\ -b locate at bottom\\n\\n\\ To change colours, edit the options:\\n\\n\\ -nb normal background colour\\n\\ -nf normal foreground colour\\n\\ -sb selected background colour\\n\\ -sf selected foreground colour\\n\\n\\ Get all configuration options with 'man dmenu'.\\n\" if [[ $# = 1 ]] ; then case $1 in -h | --help ) echo -e \" $USAGE \" exit 0 ;; * ) echo -e \"\\n Invalid command argument\\n\" exit 1 ;; esac fi dmenu_run -b -i -nb '#151617' -nf '#FF9C00' -sb '#FF9C00' -sf '#151617' -fn 'monofur for Powerline Regular-10' Se ve de la siguiente manera: Por si no lo notan, es el lanzador que se ve en la parte de abajo del escritorio. XD Saludos, y espero vayan dejando de lado el mouse y ganando velocidad al lanzar sus aplicaciones.","tags":"About","title":"dmenu"},{"url":"blog/nsa-en-github","text":"La Agencia Nacional de Seguridad (NSA por sus siglas en inglés), es una de las agencias secretas de inteligencia de los EE.UU.'. Donde emplean programadores y matemáticos de gran talento con el fin de romper códigos, cifrados, reunir información sobre adversarios, y defender el país contra las amenazas digitales. Como era de esperar, la NSA siempre ha preferido trabajar en la oscuridad. Pero desde que las filtraciones de Snowden en 2013, la organización ha aumentado gradualmente su presencia pública. Hace algunos años, se abrió una cuenta de Twitter (de hecho, fue el primer perfil de Edward Snowden siguió cuando se unió en 2015 ). Y ahora, se abrió una cuenta de Github, y ha compartido varios repositorios de código interesantes en el marco del Programa de Transferencia de Tecnología de la NSA (TTP) . Hasta el momento, se enumeran 32 proyectos diferentes, aunque algunos de ellos están 'en proceso'. Muchos de ellos en realidad no son nuevos, es decir, ya han estado disponibles desde hace algún tiempo. por ejemplo SELinux (Security-Enhanced Linux), ha sido parte del núcleo de Linux desde hace años. No me sorprende que la NSA ha tomado esta medida. Para empezar, hay una larga y orgullosa tradición de tecnologías que hacen su camino desde los entornos de defensa e inteligencia al público en general. El Internet es un brillante ejemplo de ello. Y comprometerse con expertos en tecnología a través de Github es una gran manera de sanear su imagen, y potencialmente reclutar talento. Si deseas entrar al perfil de Github de la NSA presiona aquí . fuente: http://telegra.ph/Si-Ahora-la-NSA-tiene-una-cuenta-en-Github-06-19","tags":"About","title":"NSA en Github"},{"url":"blog/nigromancer","text":"Bienvenidos sean visitantes del ciberespacio a las mazmorras de Mordor, un lugar donde escribiré lo que tenga ganas de escribir mientras voy forjando al Único. Un script para gobernarlos a todos. Un script para encontrarlos, un script para atraerlos a todos y atarlos en las tinieblas.","tags":"About","title":"Nigromancer"}]}